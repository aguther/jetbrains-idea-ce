// --------------------------------------------------------------------------------------------------------------------
plugins {
    id 'nebula.ospackage' version '4.0.0'
    id "de.undercouch.download" version '3.1.1'
    id 'net.researchgate.release' version '2.3.5'
}

// --------------------------------------------------------------------------------------------------------------------
def parsedIdeaRelease     = VersionNumber.parse(ideaRelease)
def parsedIdeaBuildNumber = VersionNumber.parse(ideaBuildNumber)

// --------------------------------------------------------------------------------------------------------------------
task downloadPackage(type: de.undercouch.gradle.tasks.download.Download) {
    src ((ideaIsEarlyAccessRelease != 'yes') 
        ? "https://download.jetbrains.com/idea/ideaIC-${ideaRelease}.tar.gz" 
        : "https://download.jetbrains.com/idea/ideaIC-${ideaBuildNumber}.tar.gz"
    )
    dest project.file("$buildDir/downloaded/ideaIC.tar.gz")
    onlyIfNewer true
}

// --------------------------------------------------------------------------------------------------------------------
def extractionDirectory = project.file("$buildDir/extracted")

task extractPackage(dependsOn: downloadPackage) {

    outputs.dir extractionDirectory

    doLast {
        copy {
            from tarTree(resources.gzip(downloadPackage.dest))
            into extractionDirectory
        }
    }
}

// --------------------------------------------------------------------------------------------------------------------
task verifyPackage(dependsOn: extractPackage) {
    doLast {
        if (file("$extractionDirectory/idea-IC-$ideaBuildNumber").exists() == false) {
            throw new GradleException("Expected directory '$extractionDirectory/idea-IC-$ideaBuildNumber' does not exist. Is the property 'ideaBuildNumber' correct?")
        }
    }
}

// --------------------------------------------------------------------------------------------------------------------
def targetDirectory = '/opt/jetbrains/idea'

ospackage {
    vendor = 'JetBrains s.r.o.'
    url = 'http://www.jetbrains.com'
    license = 'Apache 2.0'

    summary = 'The Most Intelligent Java IDE'
    description = 'Excel at enterprise, mobile and web development with Java, Scala, Groovy and Kotlin, with all the latest modern technologies and frameworks available out of the box.'

    packageGroup = 'Development/Tools'

    packager = 'Andreas Guther'

    version = "${parsedIdeaRelease.major}.${parsedIdeaRelease.minor}.${parsedIdeaBuildNumber.minor}.${parsedIdeaBuildNumber.micro}"
    release = rpmRelease
    arch = NOARCH
    os = LINUX

    user = 'root'

    requires('java')
    provides('jetbrains-idea', "${parsedIdeaBuildNumber.major}.${parsedIdeaBuildNumber.minor}", EQUAL)
    conflicts('jetbrains-idea-ue')

    into "$targetDirectory"

    from("$extractionDirectory/idea-IC-$ideaBuildNumber") {
        exclude '**/idea.properties'
        into ''
    }
    from("$extractionDirectory/idea-IC-$ideaBuildNumber") {
        include '**/idea.properties'
        filter { String line ->
            line.replace('# idea.plugins.path=${idea.config.path}/plugins', 'idea.plugins.path=${idea.home.path}/plugins')
        }
        into ''
    }
    from('src/main/resources/desktop') {
        into '/usr/local/share/applications'
    }
    from('src/main/resources/profile.d') {
        into '/etc/profile.d'
        fileMode 0644
    }
}

buildRpm {
    dependsOn verifyPackage

    link('/usr/local/bin/idea', "$targetDirectory/bin/idea.sh")
}

// --------------------------------------------------------------------------------------------------------------------
defaultTasks 'buildRpm'
